(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{575:function(e,o,r){"use strict";r.r(o);var i=r(2),t=Object(i.a)({},(function(){var e=this,o=e.$createElement,r=e._self._c||o;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h4",{attrs:{id:"pch-was-compiled-with-module-cache"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#pch-was-compiled-with-module-cache"}},[e._v("#")]),e._v(" pch was compiled with module cache...")]),e._v(" "),r("p",[e._v("解决方法：\n1.Close your project or workspace.\n2.In Finder: ⇧shift+⌘cmd+G\n3.Paste: ~/Library/Developer/Xcode/DerivedData/\n4.Delete the ModuleCache folder and empty trash.\n5.Open up your project.\n6.Clean: ⇧shift+⌘cmd+K\n7.Build: ⌘cmd+B")]),e._v(" "),r("hr"),e._v(" "),r("h4",{attrs:{id:"the-file-logs-couldn-t-be-saved-in-the-folder-library-because-a-file-with-the-same-name-already-exists"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#the-file-logs-couldn-t-be-saved-in-the-folder-library-because-a-file-with-the-same-name-already-exists"}},[e._v("#")]),e._v(" The file “Logs” couldn’t be saved in the folder “Library” because a file with the same name already exists.")]),e._v(" "),r("p",[e._v("解决方法：\niOS Simulator -> Reset Content and Settings.")]),e._v(" "),r("hr"),e._v(" "),r("h4",{attrs:{id:"your-build-settings-specify-a-provisioning-profile-with-the-uuid-no-provisioning-profile-was-found"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#your-build-settings-specify-a-provisioning-profile-with-the-uuid-no-provisioning-profile-was-found"}},[e._v("#")]),e._v(" Your build settings specify a provisioning profile with the UUID,no provisioning profile was found")]),e._v(" "),r("p",[e._v('解决方法： 1.找到项目 xcodeproj 文件,右键打开包内容; 2.找到 project.pbxproj 文件全局搜索“PROVISIONING_PROFILE",将相关 UUID 都删除; 3.保存文件重新打开项目,重新安装 provisioning profile 文件即可.')]),e._v(" "),r("hr"),e._v(" "),r("h4",{attrs:{id:"error-returned-in-reply-connection-invalid"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#error-returned-in-reply-connection-invalid"}},[e._v("#")]),e._v(" Error returned in reply:Connection invalid.")]),e._v(" "),r("p",[e._v("解决方法：\n重启 Xcode 和模拟器即可.")]),e._v(" "),r("hr"),e._v(" "),r("h4",{attrs:{id:"swift-中-pods-导入-oc-库报-file-not-found"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#swift-中-pods-导入-oc-库报-file-not-found"}},[e._v("#")]),e._v(" Swift 中 pods 导入 OC 库报 file not found")]),e._v(" "),r("p",[e._v("解决方法:\n1.target->Build Settings->Objective-C Bridging Header,设置路径; 2.在 Bridging-Header(桥接文件)中 \b 引入.h 文件要包含上层文件夹,否则 Xcode 找不到: "),r("code",[e._v('#import "AFNetworking/AFNetworking.h"')])]),e._v(" "),r("hr"),e._v(" "),r("h4",{attrs:{id:"cornerstone-无法上传项目-a-文件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#cornerstone-无法上传项目-a-文件"}},[e._v("#")]),e._v(" Cornerstone 无法上传项目.a 文件")]),e._v(" "),r("p",[e._v("解决方法:\n1.cmd+,进入设置界面,选中 Subversion 取消选项 Use default global ignores;\n2.\b 终端输入"),r("code",[e._v("vi ~/.subversion/config")]),e._v("找到"),r("code",[e._v("# global-ignores = *.o *.lo *.la *.al .libs *.so *.so.[0-9]* *.a *.pyc *.pyo # *.rej *~ #*# .#* .*.swp .DS_Store")]),e._v(",输入"),r("code",[e._v("i")]),e._v("进入编辑模式 \b 替换成"),r("code",[e._v("global-ignores = *.o *.lo *.la *.al .libs *.so *.so.[0-9]* *.pyc *.pyo *.rej *~ #*# .#* .*.swp .DS_Store")]),e._v(",输入"),r("code",[e._v(":wq")]),e._v("保存退出;")])])}),[],!1,null,null,null);o.default=t.exports}}]);